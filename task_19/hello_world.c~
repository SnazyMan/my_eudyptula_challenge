#include <linux/kernel.h>
#include <linux/module.h>
#include <linux/netfilter.h>
#include <linux/netfilter_ipv4.h>
#include <linux/ip.h>

unsigned int snazy_hook(void *priv, struct sk_buff *skb, const struct nf_hook_state *state)
{
	struct iphdr *iph;
	struct tcphdr *tcph;
	
	if (skb) {
		iph = ip_hdr(skb);
		if (iph->protocol == IPPROTO_TCP)) {
			tcph = tp_hdr(skb);
		
		}

	}
	
	return 0;
}

static struct nf_hook_ops snazy_nfho = {
	.hook = snazy_hook,
	.hooknum = NF_INET_PRE_ROUTING,
	.pf = PF_INET,
	.priority = NF_IP_PRI_FIRST,

};

static int __init snazy_init(void)
{
	nf_register_hook(&snazy_nfho);

	return 0;
}
module_init(snazy_init);

static void __exit snazy_exit(void)
{
	nf_unregister_hook(&snazy_nfho);
}
module_exit(snazy_exit);

MODULE_AUTHOR("Tyler Olivieri - Snazyman");
MODULE_DESCRIPTION("task_19 of eudyptula challenge");
MODULE_LICENSE("GPL");
