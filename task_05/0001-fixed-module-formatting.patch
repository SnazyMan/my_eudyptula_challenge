From fc4ac224f75c5bdda2bcd6ee544b2df05c6f311b Mon Sep 17 00:00:00 2001
From: Snazyman <tue62960@temple.edu>
Date: Sat, 18 Mar 2017 15:46:06 -0400
Subject: [9850aeb5fe79] fixed module formatting

---
 drivers/hid/usbhid/hello_world.c | 34 +---------------------------------
 1 file changed, 1 insertion(+), 33 deletions(-)

diff --git a/drivers/hid/usbhid/hello_world.c b/drivers/hid/usbhid/hello_world.c
index efff22f..c6ca8c3 100644
--- a/drivers/hid/usbhid/hello_world.c
+++ b/drivers/hid/usbhid/hello_world.c
@@ -10,15 +10,6 @@
  * When USB keyboard is plugged in, the module will be automatically loaded
  * by correct USB hotplug tools
  * depmod/kmod/udev/mdev/systemd
- *
- I think I will use depmod to resolve module dependancies
- * udev(replaced /sbin/hotplug) to load kernel module
- *
- * Events can be injected (think simulating keyboard hotplug) into the hotplug
- * mechanism through sysfs via the "uevent" files
- *
- * usb_device_id - if I want my driver (module) to be called  for every USB
- * device in the system, create a entry that sets only the driver_info field
  */
 
 static int usb_snazy_probe(struct usb_interface *iface,
@@ -34,9 +25,7 @@ static void usb_snazy_disconnect(struct usb_interface *intf)
 }
 
 static struct usb_device_id usb_snazy_id_table [] = {
-        //        {USB_DEVICE_INTERFACE_CLASS(LOGI_KBD_VENDOR,LOGI_KBD_PROD, USB_INTERFACE_PROTOCOL_KEYBOARD)},
-        //{.driver_info = 42},
-        {USB_INTERFACE_INFO(USB_INTERFACE_CLASS_HID, USB_INTERFACE_SUBCLASS_BOOT,USB_INTERFACE_PROTOCOL_KEYBOARD)},
+  {USB_INTERFACE_INFO(USB_INTERFACE_CLASS_HID, USB_INTERFACE_SUBCLASS_BOOT,USB_INTERFACE_PROTOCOL_KEYBOARD)},
         {},
 };
 MODULE_DEVICE_TABLE(usb, usb_snazy_id_table);
@@ -47,27 +36,6 @@ static struct usb_driver usb_snazy_driver = {
         .disconnect = usb_snazy_disconnect,
         .id_table = usb_snazy_id_table,
 };
-/*
-static int __init usb_snazy_init(void)
-{
-        int result;
-        printk(KERN_DEBUG "Hello world!\n");
-
-        result = usb_register(&usb_snazy_driver);
-        if(result)
-                printk(KERN_ERR "usb_register_failed. Err number %d", result);
-
-        return result;
-}
-module_init(usb_snazy_init);
-
-static void __exit usb_snazy_exit(void)
-{
-        printk(KERN_DEBUG "Goodbye World\n");
-        usb_deregister(&usb_snazy_driver);
-}
-module_exit(usb_snazy_exit);
-*/
 
 module_usb_driver(usb_snazy_driver);
 
-- 
2.7.4

